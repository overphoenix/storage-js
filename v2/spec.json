{
	"id": 0,
	"name": "@supabase/storage-js",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "index",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 525,
					"name": "StorageApiError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 526,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 18,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 527,
									"name": "new StorageApiError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 528,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 529,
											"name": "status",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 530,
											"name": "statusCode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 525,
										"name": "StorageApiError"
									},
									"overwrites": {
										"type": "reference",
										"id": 522,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 521,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 531,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 532,
							"name": "statusCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 533,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 25,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 534,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 535,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 537,
													"name": "message",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 28,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 536,
													"name": "name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 27,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 538,
													"name": "status",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 29,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "..."
												},
												{
													"id": 539,
													"name": "statusCode",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/errors.ts",
															"line": 30,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														537,
														536,
														538,
														539
													]
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								526
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								531,
								532
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								533
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 14,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 520,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 345,
					"name": "StorageClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 346,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 10,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 347,
									"name": "new StorageClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 348,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 349,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 350,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 351,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 352,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 353,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 354,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 355,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 356,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 357,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										},
										{
											"id": 358,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StorageClientOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 345,
										"name": "StorageClient"
									},
									"overwrites": {
										"type": "reference",
										"id": 5,
										"name": "default.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 4,
								"name": "default.constructor"
							}
						},
						{
							"id": 389,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 104,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 390,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id"
									},
									"parameters": [
										{
											"id": 391,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 392,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 393,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 396,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 109,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 395,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 108,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 394,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 107,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 397,
															"name": "type",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "(private-beta) specifies the bucket type. see `BucketType` for more details.\n  - default bucket type is `STANDARD`\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 110,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"id": 442,
																"name": "BucketType"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																396,
																395,
																394,
																397
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 398,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 399,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 116,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 443,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 400,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 117,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		399,
																		400
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 401,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 402,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 120,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 403,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 121,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		402,
																		403
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 45,
										"name": "default.createBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 44,
								"name": "default.createBucket"
							}
						},
						{
							"id": 431,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 240,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 432,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 433,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 434,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 435,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 244,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 436,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 437,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 244,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						437
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 438,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 245,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		435,
																		438
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 439,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 440,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 248,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 441,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 249,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		440,
																		441
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 87,
										"name": "default.deleteBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 86,
								"name": "default.deleteBucket"
							}
						},
						{
							"id": 420,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 205,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 421,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 422,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 423,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 424,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 209,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 425,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 426,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 209,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						426
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 427,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 210,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		424,
																		427
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 428,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 429,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 213,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 430,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 214,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		429,
																		430
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 76,
										"name": "default.emptyBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 75,
								"name": "default.emptyBucket"
							}
						},
						{
							"id": 359,
							"name": "from",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/StorageClient.ts",
									"line": 24,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 360,
									"name": "from",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform file operation in a bucket."
									},
									"parameters": [
										{
											"id": 361,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The bucket id to operate on.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 380,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 381,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 382,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 383,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 384,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 69,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 443,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 385,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 70,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		384,
																		385
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 386,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 387,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 73,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 388,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 74,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		387,
																		388
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 36,
										"name": "default.getBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "default.getBucket"
							}
						},
						{
							"id": 372,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 38,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 373,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 374,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 375,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 40,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 443,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 376,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 41,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		375,
																		376
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 377,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 378,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 44,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 379,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 45,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		378,
																		379
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 28,
										"name": "default.listBuckets"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 27,
								"name": "default.listBuckets"
							}
						},
						{
							"id": 404,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 160,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 405,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a Storage bucket"
									},
									"parameters": [
										{
											"id": 406,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 407,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 408,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 411,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 165,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 410,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 164,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 409,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 163,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																411,
																410,
																409
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 412,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 413,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 169,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 414,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 415,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 169,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						415
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 416,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 170,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		413,
																		416
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 417,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 418,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 173,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 419,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 174,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		418,
																		419
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 60,
										"name": "default.updateBucket"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 59,
								"name": "default.updateBucket"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								346
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								389,
								431,
								420,
								359,
								380,
								372,
								404
							]
						}
					],
					"sources": [
						{
							"fileName": "src/StorageClient.ts",
							"line": 9,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3,
							"name": "default"
						}
					]
				},
				{
					"id": 520,
					"name": "StorageError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 521,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 4,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 522,
									"name": "new StorageError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 523,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 520,
										"name": "StorageError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								521
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 1,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"qualifiedName": "Error",
							"package": "typescript",
							"name": "Error"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 525,
							"name": "StorageApiError"
						},
						{
							"type": "reference",
							"id": 541,
							"name": "StorageUnknownError"
						}
					]
				},
				{
					"id": 541,
					"name": "StorageUnknownError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 542,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 38,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 543,
									"name": "new StorageUnknownError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 544,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 545,
											"name": "originalError",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 541,
										"name": "StorageUnknownError"
									},
									"overwrites": {
										"type": "reference",
										"id": 522,
										"name": "StorageError.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 521,
								"name": "StorageError.constructor"
							}
						},
						{
							"id": 546,
							"name": "originalError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/errors.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								542
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								546
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 35,
							"character": 13
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 520,
							"name": "StorageError"
						}
					]
				},
				{
					"id": 443,
					"name": "Bucket",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 449,
							"name": "allowed_mime_types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 450,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 448,
							"name": "file_size_limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 444,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 446,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 447,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 7,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 452,
							"name": "public",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 445,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 442,
								"name": "BucketType"
							}
						},
						{
							"id": 451,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								449,
								450,
								448,
								444,
								446,
								447,
								452,
								445,
								451
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 3,
							"character": 17
						}
					]
				},
				{
					"id": 487,
					"name": "DestinationOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 488,
							"name": "destinationBucket",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 78,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								488
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 77,
							"character": 17
						}
					]
				},
				{
					"id": 505,
					"name": "FetchParameters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 506,
							"name": "signal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Pass in an AbortController's signal to cancel the request."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 121,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "AbortSignal",
								"package": "typescript",
								"name": "AbortSignal"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								506
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 117,
							"character": 17
						}
					]
				},
				{
					"id": 453,
					"name": "FileObject",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 455,
							"name": "bucket_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 462,
							"name": "buckets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 24,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 443,
								"name": "Bucket"
							}
						},
						{
							"id": 459,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 457,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 460,
							"name": "last_accessed_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 22,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 461,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 23,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 454,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 456,
							"name": "owner",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 458,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								455,
								462,
								459,
								457,
								460,
								461,
								454,
								456,
								458
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 15,
							"character": 17
						}
					]
				},
				{
					"id": 463,
					"name": "FileObjectV2",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 467,
							"name": "bucket_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 472,
							"name": "cache_control",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 473,
							"name": "content_type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 469,
							"name": "created_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 474,
							"name": "etag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 464,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 470,
							"name": "last_accessed_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 475,
							"name": "last_modified",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 476,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 466,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 471,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 468,
							"name": "updated_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 465,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								467,
								472,
								473,
								469,
								474,
								464,
								470,
								475,
								476,
								466,
								471,
								468,
								465
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 27,
							"character": 17
						}
					]
				},
				{
					"id": 480,
					"name": "FileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 481,
							"name": "cacheControl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of seconds the asset is cached in the browser and in the Supabase CDN. This is set in the `Cache-Control: max-age=<seconds>` header. Defaults to 3600 seconds."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 482,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 484,
							"name": "duplex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The duplex option is a string parameter that enables or disables duplex streaming, allowing for both reading and writing data in the same stream. It can be passed as an option to the fetch() method."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 486,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optionally add extra headers"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 485,
							"name": "metadata",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The metadata option is an object that allows you to store additional information about the file. This information can be used to filter and search for files. The metadata object can contain any key-value pairs you want to store."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Record",
								"package": "typescript",
								"name": "Record"
							}
						},
						{
							"id": 483,
							"name": "upsert",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When upsert is set to true, the file is overwritten if it exists. When set to false, an error is thrown if the object already exists. Defaults to false."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								481,
								482,
								484,
								486,
								485,
								483
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 48,
							"character": 17
						}
					]
				},
				{
					"id": 507,
					"name": "Metadata",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 508,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								508
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 125,
							"character": 17
						}
					]
				},
				{
					"id": 489,
					"name": "SearchOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 490,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of files you want to be returned.",
								"tags": [
									{
										"tag": "default",
										"text": "100\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 491,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The starting position."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 91,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 493,
							"name": "search",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The search string to filter files by."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 492,
							"name": "sortBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The column to sort by. Can be any column inside a FileObject."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 96,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 477,
								"name": "SortBy"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								490,
								491,
								493,
								492
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 81,
							"character": 17
						}
					]
				},
				{
					"id": 494,
					"name": "SearchV2Options",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 497,
							"name": "cursor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 107,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 495,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 496,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 106,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 498,
							"name": "with_delimiter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 108,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								497,
								495,
								496,
								498
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 104,
							"character": 17
						}
					]
				},
				{
					"id": 499,
					"name": "SearchV2Result",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 501,
							"name": "folders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 502,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 503,
												"name": "name",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "src/lib/types.ts",
														"line": 113,
														"character": 13
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													503
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 500,
							"name": "hasNext",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 112,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 504,
							"name": "objects",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 114,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 453,
									"name": "FileObject"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								501,
								500,
								504
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 111,
							"character": 17
						}
					]
				},
				{
					"id": 477,
					"name": "SortBy",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 478,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 479,
							"name": "order",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								478,
								479
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 43,
							"character": 17
						}
					]
				},
				{
					"id": 509,
					"name": "TransformOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 514,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the format of the image requested.",
								"text": "When using 'origin' we force the format to be the same as the original image.\nWhen this option is not passed in, images are optimized to modern image formats like Webp.\n"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 157,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "origin"
							}
						},
						{
							"id": 511,
							"name": "height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The height of the image in pixels."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 137,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 513,
							"name": "quality",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Set the quality of the returned image.\nA number from 20 to 100, with 100 being the highest quality.\nDefaults to 80"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 150,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 512,
							"name": "resize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The resize mode can be cover, contain or fill. Defaults to cover.\nCover resizes the image to maintain it's aspect ratio while filling the entire width and height.\nContain resizes the image to maintain it's aspect ratio while fitting the entire image within the width and height.\nFill resizes the image to fill the entire width and height. If the object's aspect ratio does not match the width and height, the image will be stretched to fit."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 144,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "cover"
									},
									{
										"type": "literal",
										"value": "contain"
									},
									{
										"type": "literal",
										"value": "fill"
									}
								]
							}
						},
						{
							"id": 510,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The width of the image in pixels."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 133,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								514,
								511,
								513,
								512,
								510
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 129,
							"character": 17
						}
					]
				},
				{
					"id": 442,
					"name": "BucketType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 1,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "STANDARD"
							},
							{
								"type": "literal",
								"value": "ANALYTICS"
							}
						]
					}
				},
				{
					"id": 515,
					"name": "Camelize",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 164,
							"character": 12
						}
					],
					"typeParameter": [
						{
							"id": 516,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 516,
								"name": "T"
							}
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"name": "K"
							},
							"objectType": {
								"type": "reference",
								"id": 516,
								"name": "T"
							}
						},
						"nameType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "K"
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"qualifiedName": "Extract",
									"package": "typescript",
									"name": "Extract"
								}
							],
							"name": "CamelCase"
						}
					}
				},
				{
					"id": 517,
					"name": "isStorageError",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 10,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 518,
							"name": "isStorageError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 519,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 520,
									"name": "StorageError"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						525,
						345,
						520,
						541
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						443,
						487,
						505,
						453,
						463,
						480,
						507,
						489,
						494,
						499,
						477,
						509
					]
				},
				{
					"title": "Type Aliases",
					"kind": 4194304,
					"children": [
						442,
						515
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						517
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "packages/StorageBucketApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 5,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 6,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 7,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 8,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 9,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 10,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 11,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 12,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 13,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 14,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 15,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										},
										{
											"id": 16,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "StorageClientOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 44,
							"name": "createBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 104,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45,
									"name": "createBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a new Storage bucket",
										"returns": "newly created bucket id"
									},
									"parameters": [
										{
											"id": 46,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are creating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 47,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 48,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 51,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 109,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 50,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 108,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 49,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 107,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 52,
															"name": "type",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "(private-beta) specifies the bucket type. see `BucketType` for more details.\n  - default bucket type is `STANDARD`\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 110,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"id": 442,
																"name": "BucketType"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																51,
																50,
																49,
																52
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 53,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 54,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 116,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 443,
																				"name": "Bucket"
																			},
																			{
																				"type": "literal",
																				"value": "name"
																			}
																		],
																		"qualifiedName": "Pick",
																		"package": "typescript",
																		"name": "Pick"
																	}
																},
																{
																	"id": 55,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 117,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		54,
																		55
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 56,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 57,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 120,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 58,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 121,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		57,
																		58
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 86,
							"name": "deleteBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 240,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 87,
									"name": "deleteBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\nYou must first `empty()` the bucket."
									},
									"parameters": [
										{
											"id": 88,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to delete.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 89,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 90,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 244,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 91,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 92,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 244,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						92
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 93,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 245,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		90,
																		93
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 94,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 95,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 248,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 96,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 249,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		95,
																		96
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 75,
							"name": "emptyBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 205,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 76,
									"name": "emptyBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes all objects inside a single bucket."
									},
									"parameters": [
										{
											"id": 77,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to empty.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 78,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 79,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 209,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 80,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 81,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 209,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						81
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 82,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 210,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		79,
																		82
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 83,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 84,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 213,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 85,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 214,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		84,
																		85
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 35,
							"name": "getBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 36,
									"name": "getBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing Storage bucket."
									},
									"parameters": [
										{
											"id": 37,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The unique identifier of the bucket you would like to retrieve.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 38,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 39,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 69,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 443,
																		"name": "Bucket"
																	}
																},
																{
																	"id": 40,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 70,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		39,
																		40
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 41,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 42,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 73,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 43,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 74,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		42,
																		43
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 27,
							"name": "listBuckets",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 38,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 28,
									"name": "listBuckets",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of all Storage buckets within an existing project."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 29,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 30,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 40,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 443,
																			"name": "Bucket"
																		}
																	}
																},
																{
																	"id": 31,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 41,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		30,
																		31
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 32,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 33,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 44,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 34,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 45,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		33,
																		34
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 59,
							"name": "updateBucket",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageBucketApi.ts",
									"line": 160,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 60,
									"name": "updateBucket",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Updates a Storage bucket"
									},
									"parameters": [
										{
											"id": 61,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "A unique identifier for the bucket you are updating."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 62,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 63,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 66,
															"name": "allowedMimeTypes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the allowed mime types that this bucket can accept during upload.\nThe default value is null, which allows files with all mime types to be uploaded.\nEach mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 165,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														},
														{
															"id": 65,
															"name": "fileSizeLimit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "specifies the max file size in bytes that can be uploaded to this bucket.\nThe global file size limit takes precedence over this value.\nThe default value is null, which doesn't set a per bucket file size limit."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 164,
																	"character": 6
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 64,
															"name": "public",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageBucketApi.ts",
																	"line": 163,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																66,
																65,
																64
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 67,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 68,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 169,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 69,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 70,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageBucketApi.ts",
																							"line": 169,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						70
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 71,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 170,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		68,
																		71
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 72,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 73,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 173,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 74,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageBucketApi.ts",
																			"line": 174,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		73,
																		74
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								44,
								86,
								75,
								35,
								27,
								59
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageBucketApi.ts",
							"line": 8,
							"character": 21
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 345,
							"name": "StorageClient"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageBucketApi.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 97,
			"name": "packages/StorageFileApi",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 98,
					"name": "default",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 99,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 50,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "new default",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 101,
											"name": "url",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 102,
											"name": "headers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 103,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 104,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 105,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											},
											"defaultValue": "{}"
										},
										{
											"id": 106,
											"name": "bucketId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 107,
											"name": "fetch",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 108,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 109,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 110,
																	"name": "input",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInfo",
																		"package": "typescript",
																		"name": "RequestInfo"
																	}
																},
																{
																	"id": 111,
																	"name": "init",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"qualifiedName": "RequestInit",
																		"package": "typescript",
																		"name": "RequestInit"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"qualifiedName": "Response",
																		"package": "typescript",
																		"name": "Response"
																	}
																],
																"qualifiedName": "Promise",
																"package": "typescript",
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 98,
										"name": "default"
									}
								}
							]
						},
						{
							"id": 213,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 357,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 214,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Copies an existing file to a new path in the same bucket."
									},
									"parameters": [
										{
											"id": 215,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-copy.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 217,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The destination options.\n"
											},
											"type": {
												"type": "reference",
												"id": 487,
												"name": "DestinationOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 218,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 219,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 363,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 220,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 221,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 363,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						221
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 222,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 364,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		219,
																		222
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 223,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 224,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 367,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 225,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 368,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		224,
																		225
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 169,
							"name": "createSignedUploadUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 227,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 170,
									"name": "createSignedUploadUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a signed upload URL.\nSigned upload URLs can be used to upload files to the bucket without further authentication.\nThey are valid for 2 hours."
									},
									"parameters": [
										{
											"id": 171,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 172,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 173,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 174,
															"name": "upsert",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "If set to true, allows the file to be overwritten if it already exists.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 229,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																174
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 175,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 176,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 232,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 177,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 180,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 232,
																							"character": 50
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 178,
																					"name": "signedUrl",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 232,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 179,
																					"name": "token",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 232,
																							"character": 35
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						180,
																						178,
																						179
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 181,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 233,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		176,
																		181
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 182,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 183,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 236,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 184,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 237,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		183,
																		184
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 226,
							"name": "createSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 401,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 227,
									"name": "createSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a signed URL. Use a signed URL to share a file for a fixed amount of time."
									},
									"parameters": [
										{
											"id": 228,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 229,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 230,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 231,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 232,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 404,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 233,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 404,
																	"character": 45
																}
															],
															"type": {
																"type": "reference",
																"id": 509,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																232,
																233
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 234,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 235,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 407,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 236,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 237,
																					"name": "signedUrl",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 407,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						237
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 238,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 408,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		235,
																		238
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 239,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 240,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 411,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 241,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 412,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		240,
																		241
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 242,
							"name": "createSignedUrls",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 446,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 243,
									"name": "createSignedUrls",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time."
									},
									"parameters": [
										{
											"id": 244,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 245,
											"name": "expiresIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 246,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 247,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 248,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 449,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																248
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 249,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 250,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 452,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 251,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 252,
																						"name": "error",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 452,
																								"character": 16
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 253,
																						"name": "path",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 452,
																								"character": 38
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					},
																					{
																						"id": 254,
																						"name": "signedUrl",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "src/packages/StorageFileApi.ts",
																								"line": 452,
																								"character": 59
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							252,
																							253,
																							254
																						]
																					}
																				]
																			}
																		}
																	}
																},
																{
																	"id": 255,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 453,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		250,
																		255
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 256,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 257,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 456,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 258,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 457,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		257,
																		258
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 259,
							"name": "download",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 495,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 260,
									"name": "download",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead."
									},
									"parameters": [
										{
											"id": 261,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The full path and file name of the file to be downloaded. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 262,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 263,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 264,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 497,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"id": 509,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																264
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 265,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 266,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 500,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"qualifiedName": "Blob",
																		"package": "typescript",
																		"name": "Blob"
																	}
																},
																{
																	"id": 267,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 501,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		266,
																		267
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 268,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 269,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 504,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 270,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 505,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		269,
																		270
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 280,
							"name": "exists",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 567,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 281,
									"name": "exists",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks the existence of a file."
									},
									"parameters": [
										{
											"id": 282,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 283,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 284,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 571,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 285,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 572,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		284,
																		285
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 286,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 287,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 575,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 288,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 576,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		287,
																		288
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 289,
							"name": "getPublicUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 608,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 290,
									"name": "getPublicUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\nThis function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset."
									},
									"parameters": [
										{
											"id": 291,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The path and name of the file to generate the public URL for. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 292,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 293,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 294,
															"name": "download",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename."
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 610,
																	"character": 16
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																]
															}
														},
														{
															"id": 295,
															"name": "transform",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Transform the asset before serving it to the client.\n"
															},
															"sources": [
																{
																	"fileName": "src/packages/StorageFileApi.ts",
																	"line": 610,
																	"character": 45
																}
															],
															"type": {
																"type": "reference",
																"id": 509,
																"name": "TransformOptions"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																294,
																295
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 296,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 297,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/packages/StorageFileApi.ts",
															"line": 611,
															"character": 7
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 298,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 299,
																	"name": "publicUrl",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 611,
																			"character": 15
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		299
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														297
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 271,
							"name": "info",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 534,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 272,
									"name": "info",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the details of an existing file."
									},
									"parameters": [
										{
											"id": 273,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 274,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 275,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 538,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 515,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 463,
																				"name": "FileObjectV2"
																			}
																		],
																		"name": "Camelize"
																	}
																},
																{
																	"id": 276,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 539,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		275,
																		276
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 277,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 278,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 542,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 279,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 543,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		278,
																		279
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 309,
							"name": "list",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 743,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 310,
									"name": "list",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Lists all the files within a bucket."
									},
									"parameters": [
										{
											"id": 311,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The folder path."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 312,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Search options including limit (defaults to 100), offset, sortBy, and search\n"
											},
											"type": {
												"type": "reference",
												"id": 489,
												"name": "SearchOptions"
											}
										},
										{
											"id": 313,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 505,
												"name": "FetchParameters"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 314,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 315,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 749,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 453,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 316,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 750,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		315,
																		316
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 317,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 318,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 753,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 319,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 754,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		318,
																		319
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 320,
							"name": "listV2",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 781,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 321,
									"name": "listV2",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"tags": [
											{
												"tag": "experimental",
												"text": "this method signature might change in the future"
											}
										]
									},
									"parameters": [
										{
											"id": 322,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "search options"
											},
											"type": {
												"type": "reference",
												"id": 494,
												"name": "SearchV2Options"
											}
										},
										{
											"id": 323,
											"name": "parameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "\n"
											},
											"type": {
												"type": "reference",
												"id": 505,
												"name": "FetchParameters"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 324,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 325,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 786,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 499,
																		"name": "SearchV2Result"
																	}
																},
																{
																	"id": 326,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 787,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		325,
																		326
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 327,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 328,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 790,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 329,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 791,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		328,
																		329
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 200,
							"name": "move",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 314,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 201,
									"name": "move",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Moves an existing file to a new path in the same bucket."
									},
									"parameters": [
										{
											"id": 202,
											"name": "fromPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The original file path, including the current file name. For example `folder/image.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 203,
											"name": "toPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The new file path, including the new file name. For example `folder/image-new.png`."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 204,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "The destination options.\n"
											},
											"type": {
												"type": "reference",
												"id": 487,
												"name": "DestinationOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 205,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 206,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 320,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 207,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 208,
																					"name": "message",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 320,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						208
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 209,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 321,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		206,
																		209
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 210,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 211,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 324,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 212,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 325,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		211,
																		212
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 300,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 646,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 301,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes files within the same bucket"
									},
									"parameters": [
										{
											"id": 302,
											"name": "paths",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 303,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 304,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 650,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 453,
																			"name": "FileObject"
																		}
																	}
																},
																{
																	"id": 305,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 651,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		304,
																		305
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 306,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 307,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 654,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 308,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 655,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		307,
																		308
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 333,
							"name": "toBase64",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 817,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 334,
									"name": "toBase64",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 335,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 185,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 280,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 186,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Replaces an existing file at the specified path with a new one."
									},
									"parameters": [
										{
											"id": 187,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBuffer",
														"package": "typescript",
														"name": "ArrayBuffer"
													},
													{
														"type": "reference",
														"qualifiedName": "ArrayBufferView",
														"package": "typescript",
														"name": "ArrayBufferView"
													},
													{
														"type": "reference",
														"qualifiedName": "Blob",
														"package": "typescript",
														"name": "Blob"
													},
													{
														"type": "reference",
														"qualifiedName": "Buffer",
														"package": "@types/node",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"qualifiedName": "File",
														"package": "typescript",
														"name": "File"
													},
													{
														"type": "reference",
														"qualifiedName": "FormData",
														"package": "typescript",
														"name": "FormData"
													},
													{
														"type": "reference",
														"qualifiedName": "NodeJS.ReadableStream",
														"package": "@types/node",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"qualifiedName": "Uint8Array",
																"package": "typescript",
																"name": "Uint8Array"
															}
														],
														"qualifiedName": "ReadableStream",
														"package": "typescript",
														"name": "ReadableStream"
													},
													{
														"type": "reference",
														"qualifiedName": "URLSearchParams",
														"package": "typescript",
														"name": "URLSearchParams"
													}
												]
											}
										},
										{
											"id": 189,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 480,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 190,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 191,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 296,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 192,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 195,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 296,
																							"character": 42
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 193,
																					"name": "id",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 296,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 194,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 296,
																							"character": 28
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						195,
																						193,
																						194
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 196,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 297,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		191,
																		196
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 197,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 198,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 300,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 199,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 301,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		198,
																		199
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 139,
							"name": "upload",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 149,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 140,
									"name": "upload",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Uploads a file to an existing bucket."
									},
									"parameters": [
										{
											"id": 141,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 142,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "reference",
												"name": "FileBody"
											}
										},
										{
											"id": 143,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 480,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 144,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 145,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 155,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 146,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 149,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 155,
																							"character": 42
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 147,
																					"name": "id",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 155,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 148,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 155,
																							"character": 28
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						149,
																						147,
																						148
																					]
																				}
																			]
																		}
																	}
																},
																{
																	"id": 150,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 156,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		145,
																		150
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 151,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 152,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 159,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	}
																},
																{
																	"id": 153,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 160,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		152,
																		153
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 154,
							"name": "uploadToSignedUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/packages/StorageFileApi.ts",
									"line": 172,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 155,
									"name": "uploadToSignedUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Upload a file with a token generated from `createSignedUploadUrl`."
									},
									"parameters": [
										{
											"id": 156,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 157,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The token generated from `createSignedUploadUrl`"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 158,
											"name": "fileBody",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The body of the file to be stored in the bucket.\n"
											},
											"type": {
												"type": "reference",
												"name": "FileBody"
											}
										},
										{
											"id": 159,
											"name": "fileOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 480,
												"name": "FileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 160,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 161,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 208,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 162,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 164,
																					"name": "fullPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 208,
																							"character": 33
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					},
																					"defaultValue": "data.Key"
																				},
																				{
																					"id": 163,
																					"name": "path",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/packages/StorageFileApi.ts",
																							"line": 208,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					},
																					"defaultValue": "cleanPath"
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						164,
																						163
																					]
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 165,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 209,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	},
																	"defaultValue": "null"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		161,
																		165
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 166,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 167,
																	"name": "data",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/packages/StorageFileApi.ts",
																			"line": 213,
																			"character": 17
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": null
																	},
																	"defaultValue": "null"
																},
																{
																	"id": 168,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 520,
																		"name": "StorageError"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		167,
																		168
																	]
																}
															]
														}
													}
												]
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								99
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								213,
								169,
								226,
								242,
								259,
								280,
								289,
								271,
								309,
								320,
								200,
								300,
								333,
								185,
								139,
								154
							]
						}
					],
					"sources": [
						{
							"fileName": "src/packages/StorageFileApi.ts",
							"line": 44,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						98
					]
				}
			],
			"sources": [
				{
					"fileName": "src/packages/StorageFileApi.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 2,
			"children": [
				1,
				2,
				97
			]
		}
	]
}